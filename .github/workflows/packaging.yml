name: package-server
run-name: Package server

permissions:
  packages: write

on:
  push:
    tags:
      - "v*"
    paths:
      - ".github/workflows/**"
      - "website/**"
      - "!website/.vscode/**"
      - "!website/.gitignore"
      - "!website/README.md"
      - "docker/**"
      - "server/**"
      - "!server/.vscode/**"
      - "!server/.gitignore"
      - "!server/README.md"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  build-and-package-server:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Bundle website
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Bundle website
        run: |
          cd website
          npm ci
          npm run build
      - name: Install arm64 linker, tools and libraries
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ gcc-aarch64-linux-gnu libc6-dev-arm64-cross
      - name: Update Rust toolchain
        run: |
          rustup update
          rustup component add clippy rustfmt
          rustup target add aarch64-unknown-linux-musl
          rustup target add x86_64-unknown-linux-musl
      - name: Rust Toolchain info
        run: |
          cargo --version --verbose
          rustc --version
          cargo clippy --version
      - name: Lint server
        run: |
          cd server
          cargo fmt -- --check
          cargo clippy -- -D warnings
      - name: Test server
        run: |
          cd server
          cargo check
          cargo test --all
      - name: Build server
        run: |
          ./scripts/build.sh
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=semver,pattern={{version}}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/arm64,linux/amd64
          build-args: |
            STATIC=website/dist
            GABBOLOGY_SERVER_TARGET=server/target
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
